{"version":3,"sources":["layouts/StartLayout.jsx","context/UserContext.js","pages/SignIn/index.js","router/index.js","theme/index.js","App.js","reportWebVitals.js","index.js"],"names":["StartLayout","UserContext","React","createContext","initialState","UserProvider","props","useState","state","setState","Provider","value","children","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignIn","classes","error","useContext","email","setEmail","password","setPassword","Container","component","maxWidth","CssBaseline","className","Box","m","Typography","variant","Avatar","color","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","onChange","e","target","type","FormControlLabel","control","Checkbox","Button","Grid","container","item","xs","Link","href","routes","path","element","createTheme","background","default","primary","info","red","success","warning","shadows","typography","fontFamily","join","App","routing","useRoutes","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.add3ff66.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\n\r\nconst StartLayout = () => (\r\n  <Outlet />\r\n);\r\n\r\nexport default StartLayout;\r\n","import React, { useState } from 'react';\r\n\r\nconst UserContext = React.createContext([{}, () => {}]);\r\n\r\nlet initialState = {};\r\n\r\nconst UserProvider = (props) => {\r\n  const [state, setState] = useState(initialState);\r\n\r\n  return (\r\n    <UserContext.Provider value={[state, setState]}>\r\n      {props.children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport { UserContext, UserProvider };\r\n","import React, { useContext, useState } from 'react';\r\nimport { UserContext } from '../../context/UserContext';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Box } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const classes = useStyles();\r\n\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [userContext, setUserContext] = useContext(UserContext);\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n   const formSubmitHandler = e => {\r\n    e.preventDefault()\r\n    setIsSubmitting(true)\r\n    setError(\"\")\r\n\r\n    const genericErrorMessage = \"Something went wrong! Please try again later.\"\r\n\r\n    fetch(process.env.REACT_APP_API_ENDPOINT + \"users/login\", {\r\n      method: \"POST\",\r\n      credentials: \"include\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ username: email, password }),\r\n    })\r\n      .then(async response => {\r\n        setIsSubmitting(false)\r\n        if (!response.ok) {\r\n          if (response.status === 400) {\r\n            setError(\"Please fill all the fields correctly!\")\r\n          } else if (response.status === 401) {\r\n            setError(\"Invalid email and password combination.\")\r\n          } else {\r\n            setError(genericErrorMessage)\r\n          }\r\n        } else {\r\n          const data = await response.json()\r\n          setUserContext(oldValues => {\r\n            return { ...oldValues, token: data.token }\r\n          })\r\n        }\r\n      })\r\n      .catch(error => {\r\n        setIsSubmitting(false)\r\n        setError(genericErrorMessage)\r\n      })\r\n   }\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Box m={10}>\r\n          <Typography component=\"h3\" variant=\"h3\">\r\n          ECOMMERCE\r\n        </Typography>\r\n        </Box>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Inicia Sesión\r\n        </Typography>\r\n        {error && (\r\n          <Typography color=\"red\" component=\"captiom\" variant=\"span\">\r\n            {error}\r\n          </Typography>\r\n        )}\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"correo eletrónico\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Contraseña\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Recuerdame\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Ingresar\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                ¿Olvidaste tu contraseña?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {\"¿No tienes una cuenta? Registrate\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport StartLayout from '../layouts/StartLayout';\r\nimport SignIn from '../pages/SignIn';\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    element: <StartLayout />,\r\n    children: [\r\n      { path: '/', element: <SignIn /> },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default routes;\r\n","import { createTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    background: {\r\n      default: 'white',\r\n      primary: '#805AD5',\r\n      secondary: 'blue',\r\n      info: '#F6C324',\r\n      red: '#FF8855',\r\n      success: '#e8faff',\r\n      warning: '#F6C324',\r\n    },\r\n    primary: {\r\n      main: '#805AD5',\r\n    },\r\n  },\r\n  shadows: [\r\n    'none',\r\n    '0 10px 20px rgba(0,0,0,0.08), 0 4px 4px rgba(0,0,0,0.15);',\r\n    '0 20px 30px rgb(0 0 0 / 20%), 0 6px 6px rgb(0 0 0 / 35%);',\r\n  ],\r\n  typography: {\r\n    fontFamily: ['Open Sans'].join(','),\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import React from 'react';\r\nimport routes from './router';\r\nimport { useRoutes } from 'react-router-dom';\r\nimport { ThemeProvider } from '@material-ui/core';\r\nimport theme from './theme';\r\n\r\nconst App = () => {\r\n  const routing = useRoutes(routes);\r\n\r\n  return <ThemeProvider theme={theme}>{routing}</ThemeProvider>;\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport './index.css';\r\nimport { UserProvider } from './context/UserContext';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <UserProvider>\r\n      <App />\r\n    </UserProvider>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}